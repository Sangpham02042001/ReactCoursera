[{"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"1","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\index.js":"2","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\App.js":"3","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"4","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"5","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\DishDetailComponent.js":"6","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"7","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"9","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"10","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"11","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"12","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"13","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\comments.js":"14","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"15","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"16","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\leaders.js":"17","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\dishes.js":"18","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js":"19","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\comments.js":"20","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"21","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js":"22","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\forms.js":"23","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js":"24"},{"size":362,"mtime":1608454352386,"results":"25","hashOfConfig":"26"},{"size":643,"mtime":1609139988746,"results":"27","hashOfConfig":"26"},{"size":500,"mtime":1609604351358,"results":"28","hashOfConfig":"26"},{"size":1996,"mtime":1609916061070,"results":"29","hashOfConfig":"26"},{"size":1614,"mtime":1609205443151,"results":"30","hashOfConfig":"26"},{"size":7954,"mtime":1609923946971,"results":"31","hashOfConfig":"26"},{"size":3875,"mtime":1609919910152,"results":"32","hashOfConfig":"26"},{"size":5650,"mtime":1609407597827,"results":"33","hashOfConfig":"26"},{"size":2826,"mtime":1609147125522,"results":"34","hashOfConfig":"26"},{"size":1898,"mtime":1609922954902,"results":"35","hashOfConfig":"26"},{"size":10360,"mtime":1609837501716,"results":"36","hashOfConfig":"26"},{"size":2432,"mtime":1609290369813,"results":"37","hashOfConfig":"26"},{"size":457,"mtime":1609203951451,"results":"38","hashOfConfig":"26"},{"size":4926,"mtime":1609203999577,"results":"39","hashOfConfig":"26"},{"size":4389,"mtime":1609292816148,"results":"40","hashOfConfig":"26"},{"size":643,"mtime":1609915423763,"results":"41","hashOfConfig":"26"},{"size":184,"mtime":1609813036351,"results":"42","hashOfConfig":"26"},{"size":624,"mtime":1609915426749,"results":"43","hashOfConfig":"26"},{"size":4365,"mtime":1609919845086,"results":"44","hashOfConfig":"26"},{"size":456,"mtime":1609814618795,"results":"45","hashOfConfig":"26"},{"size":615,"mtime":1609835470600,"results":"46","hashOfConfig":"26"},{"size":178,"mtime":1609835493272,"results":"47","hashOfConfig":"26"},{"size":169,"mtime":1609837093687,"results":"48","hashOfConfig":"26"},{"size":257,"mtime":1609831170623,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1yaqa5n",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],["106","107"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\index.js",[],["108","109"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\App.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],["110","111"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\DishDetailComponent.js",["112","113","114"],"import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal,\r\n    ModalHeader, ModalBody, Label, Row, Col\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n        }\r\n        this.renderComments = this.renderComments.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    renderComments() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.renderComments();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline color=\"secondary\" onClick={this.renderComments}>\r\n                    <span className='fa fa-sign-in fa-lg'></span>\r\n                                Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.renderComments}>\r\n                    <ModalHeader toggle={this.renderComments}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label sm={12} htmlFor=\"rating\">Rating</Label>\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" name=\"rating\" id=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label sm={12} htmlFor=\"author\">Your Name</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors className='text-danger'\r\n                                        model='.author'\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 15 characters or less\"\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label sm={12} htmlFor=\"comment\">Comment</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle heading>{dish.name}</CardTitle>\r\n                        <CardText>\r\n                            {dish.description}\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments }) {\r\n\r\n    const commentList = comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n                <div key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                </div>\r\n            </Fade >\r\n        )\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CardTitle>\r\n                Comments\r\n            </CardTitle>\r\n            {/* <div key={comments.id}>\r\n                <CardText>{comments.comment}</CardText>\r\n                <CardText>-- {comments.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comments.date)))}</CardText>\r\n            </div> */}\r\n            <div className=\"mb-3\">\r\n                <Stagger in>\r\n                    {commentList}\r\n                </Stagger>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments} />\r\n                    <CommentForm dishId={props.dish.id} postComment={props.postComment} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DishDetail;","D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["115"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],["116","117"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["118","119","120","121","122","123","124","125","126"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],["127","128"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\leaders.js",[],["129","130"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\dishes.js",[],["131","132"],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\redux\\forms.js",[],"D:\\FullStackLab\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"135","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":53,"column":37,"nodeType":"143","endLine":54,"endColumn":66},{"ruleId":"141","severity":1,"message":"144","line":65,"column":37,"nodeType":"143","endLine":71,"endColumn":39},{"ruleId":"141","severity":1,"message":"145","line":84,"column":37,"nodeType":"143","endLine":86,"endColumn":68},{"ruleId":"146","severity":1,"message":"147","line":35,"column":5,"nodeType":"148","messageId":"149","endLine":37,"endColumn":6},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":5,"column":33,"nodeType":"154","messageId":"155","endLine":5,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":61,"column":29,"nodeType":"143","endLine":61,"endColumn":71},{"ruleId":"141","severity":1,"message":"144","line":75,"column":37,"nodeType":"143","endLine":81,"endColumn":39},{"ruleId":"141","severity":1,"message":"144","line":94,"column":37,"nodeType":"143","endLine":100,"endColumn":39},{"ruleId":"141","severity":1,"message":"144","line":113,"column":37,"nodeType":"143","endLine":119,"endColumn":39},{"ruleId":"141","severity":1,"message":"144","line":133,"column":37,"nodeType":"143","endLine":138,"endColumn":46},{"ruleId":"141","severity":1,"message":"158","line":151,"column":45,"nodeType":"143","endLine":153,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":159,"column":37,"nodeType":"143","endLine":160,"endColumn":66},{"ruleId":"141","severity":1,"message":"145","line":169,"column":37,"nodeType":"143","endLine":171,"endColumn":68},{"ruleId":"133","replacedBy":"159"},{"ruleId":"135","replacedBy":"160"},{"ruleId":"133","replacedBy":"161"},{"ruleId":"135","replacedBy":"162"},{"ruleId":"133","replacedBy":"163"},{"ruleId":"135","replacedBy":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],["165"],["166"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["165"],["166"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["165"],["166"],["165"],["166"],["165"],["166"],"no-global-assign","no-unsafe-negation"]